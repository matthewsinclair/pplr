defmodule Peopler.CLI.Db.MdIndexer do
  @moduledoc """
  Generate a markdown index of the Peopler db
  """

  @ignore_patterns ~r/^_Templates$|^bin$|^index\.md$|^index\.json$|^\..*$|^Icon.?/

  def index(base_dir \\ ".") do
    result = File.ls!(base_dir)
    |> Enum.filter(&valid_directory_or_file?(&1))
    |> Enum.sort()
    |> Enum.map(&process_directory(&1, base_dir))
    |> Enum.reject(&is_nil/1)
    |> Enum.join("\n")

    header = "---\n" <>
              "verblock: \"#{Date.utc_today()}:v0.1: Generated by people_index\"\n" <>
              "---\n" <>
              "# People Index\n\n"

    IO.puts(header <> result)
  end

  defp valid_directory_or_file?(name) do
    not Regex.match?(@ignore_patterns, name)
  end

  defp process_directory(letter, base_dir) do
    letter_path = Path.join([base_dir, letter])
    case File.ls(letter_path) do
      {:ok, entries} ->
        entries
        |> Enum.filter(&valid_directory_or_file?/1)
        |> Enum.sort()
        |> Enum.map(&format_person(&1, letter))
        |> Enum.join("\n")
        |> (fn content -> "##### #{letter}\n" <> content <> "\n" end).()
      _ -> nil
    end
  end

  defp format_person(person, letter) do
    "[#{person}](#{letter}/#{person})"
  end
end
